@import "tailwindcss";

@layer theme {
  :root {
    /* Define light mode colors */
    --color-background: theme(colors.white);
    --color-text: theme(colors.gray.900);
    --color-text-secondary: theme(colors.gray.500);
    --color-input-bg: theme(colors.white);
    --color-input-text: theme(colors.gray.900);
    --color-input-border: theme(colors.gray.300);
    --color-input-placeholder: theme(colors.gray.400);
    --color-primary: theme(colors.blue.600);
  }

  /* Tailwind v4 dark mode using data-mode attribute */
  [data-mode="dark"] {
    color-scheme: dark;
    --color-background: theme(colors.gray.900);
    --color-text: theme(colors.white);
    --color-text-secondary: theme(colors.gray.400);
    --color-input-bg: theme(colors.gray.800);
    --color-input-text: theme(colors.white);
    --color-input-border: theme(colors.gray.700);
    --color-input-placeholder: theme(colors.gray.500);
    --color-primary: theme(colors.blue.500);
  }

  /* For backward compatibility with Tailwind v3 */
  .dark {
    color-scheme: dark;
    --color-background: theme(colors.gray.900);
    --color-text: theme(colors.white);
    --color-text-secondary: theme(colors.gray.400);
    --color-input-bg: theme(colors.gray.800);
    --color-input-text: theme(colors.white);
    --color-input-border: theme(colors.gray.700);
    --color-input-placeholder: theme(colors.gray.500);
    --color-primary: theme(colors.blue.500);
  }

  /* System preference dark mode */
  @media (prefers-color-scheme: dark) {
    :root:not([data-mode="light"]) {
      color-scheme: dark;
      --color-background: theme(colors.gray.900);
      --color-text: theme(colors.white);
      --color-text-secondary: theme(colors.gray.400);
      --color-input-bg: theme(colors.gray.800);
      --color-input-text: theme(colors.white);
      --color-input-border: theme(colors.gray.700);
      --color-input-placeholder: theme(colors.gray.500);
      --color-primary: theme(colors.blue.500);
    }
  }
}

/* Base styles */
body {
  background-color: var(--color-background);
  color: var(--color-text);
}

/* Fixed navbar styles */
.fixed {
  position: fixed;
  width: 100%;
}

/* RTL Support */
html.rtl {
  direction: rtl;
}

html.rtl .fixed {
  right: 0;
  left: 0;
}

html.rtl .sm\:ml-10 {
  margin-right: 2.5rem;
  margin-left: 0;
}

html.rtl .sm\:ml-6 {
  margin-right: 1.5rem;
  margin-left: 0;
}

html.rtl .ml-4 {
  margin-right: 1rem;
  margin-left: 0;
}

html.rtl .ml-3 {
  margin-right: 0.75rem;
  margin-left: 0;
}

html.rtl .mr-4 {
  margin-left: 1rem;
  margin-right: 0;
}

html.rtl .space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

html.rtl .space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

html.rtl .space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

html.rtl .space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

html.rtl .border-l-4 {
  border-right-width: 4px;
  border-left-width: 0;
}

html.rtl .pl-3 {
  padding-right: 0.75rem;
  padding-left: 0;
}

html.rtl .pr-4 {
  padding-left: 1rem;
  padding-right: 0;
}

html.rtl .lg\:text-left {
  text-align: right;
}

html.rtl .lg\:justify-start {
  justify-content: flex-end;
}

html.rtl .sm\:text-center {
  text-align: center;
}

/* Fix button alignment in RTL mode */
html.rtl .flex.flex-col.sm\:flex-row.sm\:justify-center.lg\:justify-start {
  width: 100%;
  justify-content: flex-end;
}

html.rtl .sm\:mx-auto.lg\:mx-0 {
  margin-right: 0;
}

/* Ensure RTL persists after refresh by storing language preference */
html.rtl .lg\:mx-0 {
  margin-right: 0;
}

/* Fix for buttons in RTL mode */
@media (min-width: 1024px) {
  html.rtl .lg\:text-left {
    text-align: right;
  }
  
  html.rtl .lg\:mx-0 {
    margin-left: auto;
    margin-right: 0;
  }
  
  html.rtl .lg\:col-span-6.lg\:text-left {
    text-align: right;
  }
  
  /* Fix spacing between text and hero image in Arabic */
  html.rtl .lg\:grid-cols-12 {
    column-gap: 2rem;
  }
  
  /* Ensure proper spacing in Arabic desktop view */
  html.rtl .lg\:gap-8 {
    gap: 2rem;
  }
}

/* Specific class for RTL button alignment */
.rtl-buttons {
  width: 100%;
}

.rtl-text {
  text-align: right;
}

/* RTL grid and image positioning */
.rtl-grid {
  column-gap: 3rem !important;
}

.rtl-image {
  padding-right: 1rem;
}

/* RTL list styles */
html.rtl .rtl-list li {
  display: flex;
  flex-direction: row-reverse;
}

html.rtl .rtl-list li p {
  text-align: right;
}

/* RTL tab navigation */
html.rtl nav.flex.justify-center.space-x-8 {
  direction: rtl;
}

html.rtl nav.flex.justify-center.space-x-8 button {
  margin-left: 2rem;
  margin-right: 0;
}

html.rtl nav.flex.justify-center.space-x-8 button:last-child {
  margin-left: 0;
}

/* Mobile and tablet centering for RTL */
@media (max-width: 1023px) {
  html.rtl .text-center {
    text-align: center !important;
  }
  
  html.rtl .rtl-text {
    text-align: center !important;
  }
  
  /* Force center alignment for all text in mobile/tablet */
  html.rtl p {
    text-align: center !important;
  }
  
  html.rtl .sm\:mx-auto {
    margin-left: auto !important;
    margin-right: auto !important;
  }
}

/* Tablet view (640px to 1023px) - center buttons */
@media (min-width: 640px) and (max-width: 1023px) {
  html.rtl .rtl-buttons {
    display: flex;
    justify-content: center;
    width: 100%;
    margin-left: auto !important;
    margin-right: auto !important;
  }
  
  html.rtl .rtl-buttons .flex {
    justify-content: center !important;
    flex-direction: row;
    width: auto;
    margin-left: auto !important;
    margin-right: auto !important;
  }
  
  html.rtl .sm\:justify-end {
    justify-content: center !important;
  }
  
  html.rtl .sm\:flex-row {
    justify-content: center !important;
  }
  
  /* Fix paragraph alignment in tablet view */
  html.rtl .sm\:text-lg {
    text-align: center !important;
  }
  
  html.rtl .sm\:max-w-xl.sm\:mx-auto {
    margin-left: auto !important;
    margin-right: auto !important;
    text-align: center !important;
  }
}

/* Mobile view (below 640px) - stack buttons */
@media (max-width: 639px) {
  html.rtl .rtl-buttons .flex {
    flex-direction: column !important;
    width: 100%;
  }
  
  html.rtl .rtl-buttons .flex a {
    width: 100%;
  }
  
  html.rtl .sm\:flex-row {
    flex-direction: column !important;
  }
}

@media (min-width: 1024px) {
  html.rtl .rtl-buttons .flex {
    justify-content: flex-start;
  }
  
  html.rtl .md\:mx-auto.lg\:col-span-6.lg\:text-left {
    text-align: right !important;
  }
  
  /* Remove the rule that's forcing justify-end for LTR languages */
  html.rtl .sm\:justify-center.lg\:justify-start {
    justify-content: flex-end !important;
  }
  
  /* Add rules to ensure LTR languages have left alignment */
  html:not(.rtl) .lg\:justify-start {
    justify-content: flex-start !important;
  }
  
  html:not(.rtl) .lg\:text-left {
    text-align: left !important;
  }
}

@media (max-width: 639px) {
  .flex.flex-col.sm\:flex-row {
    flex-direction: column;
    width: 100%;
  }
  
  .flex.flex-col.sm\:flex-row a {
    width: 100%;
    margin-bottom: 1rem;
  }
}
